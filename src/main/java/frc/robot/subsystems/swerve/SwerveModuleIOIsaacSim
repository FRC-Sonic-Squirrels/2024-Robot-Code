package frc.robot.subsystems.swerve;

import edu.wpi.first.math.util.Units;

public class SwerveModuleIOIsaacSim implements SwerveModuleIO {
    private final double distanceToRotation;

    public SwerveModuleIOIsaacSim(){
        this.distanceToRotation =
        1.0 / globalConfig.getWheelRadius().in(edu.wpi.first.units.Units.Meters);
    }

    @Override
    public void updateInputs(Inputs inputs) {}

    @Override
    public void setDriveVelocity(
        double velocityMetersPerSec, double accelerationMetersPerSecondSquared) {

        // m/s -> divide by wheel radius to get radians/s -> convert to rotations
        var velocityRotationsPerSecond =
            Units.radiansToRotations(velocityMetersPerSec * distanceToRotation);
        var accelerationRotationsPerSecondSquared =
            Units.radiansToRotations(accelerationMetersPerSecondSquared * distanceToRotation);

        
  }
}